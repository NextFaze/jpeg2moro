
This document describes a method of encoding arbitrary data (including an alpha channel) within the JPEG Application Segment APP10.

----------------------------------------------------------------------
Chunks:

(4 bytes)  Length
(4 bytes)  Chunk type  (e.g. "ALPH" for alpha channel)
(length bytes) Chunk data

The length field counts only the data field, not itself, the chunk type code.
Length is a 4-byte unsigned integer in network byte order.

----------------------------------------------------------------------
Chunk specification:

only one chunk is currently defined - "ALPH", containing alpha channel information.

The alpha channel may be represented as 1 bit, 8 bit, or 16 bit values (16 bit data should be stored in network byte order).

An alpha value of zero represents full transparency, and a value of 2^(bitdepth)-1 represents a fully opaque pixel. Intermediate values indicate partially transparent pixels that can be combined with a background image to yield a composite image.

The chunk data contains a single byte representing the bit depth of the alpha channel (0x01, 0x08 or 0x10), followed by the alpha channel data compressed using the DEFLATE algorithm (libz).

----------------------------------------------------------------------
The JPEG APP10 application segment:

The APP10 segment should appear just before the SOS (start of scan) segment in the JPEG headers.

The segment data should contain all the chunks concatenated.  If the length of all chunks exceeds 65535 bytes, it should be split into 65535 byte chunks and encoded using multiple APP10 segments.

The full application segment is (bytes)

(2 bytes) APP10 marker  (0xFFE9)
(2 bytes) Length of segment (including 2 byte length parameter)
(length - 2 bytes) Chunk data

Length is an unsigned short (2 bytes) in network byte order, representing the number of bytes in the chunk data.
Length includes the length of the chunk data and itself (e.g.  length(chunk data) + 2)

----------------------------------------------------------------------

